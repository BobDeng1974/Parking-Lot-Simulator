function bool = hasSpaces(parkingLot)
    global nRow nCol
    [nRow, nCol] = size(parkingLot);
    global spaces
    spaces=[];
    global count
    count=0;

    for i = 1:1:nRow
        if parkingLot(i,1)==0
            spaceCheck(parkingLot, [i,1]);
        end
        if parkingLot(i,nCol)==0
            spaceCheck(parkingLot, [i,nCol]);
        end
    end

    for i = 1:1:nCol
        if parkingLot(1,i)==0
            spaceCheck(parkingLot, [1,i]);
        end
        if parkingLot(nRow,i)==0
            spaceCheck(parkingLot, [nRow,i]);
        end
    end

    [nSpaces, ~] = size(spaces);
    if nSpaces>0
        bool=true;
    else
       bool=false; 
    end
end


function spaceCheck(parkingLot, currentPoint)
    global spaces nRow nCol count
    if currentPoint(1)-1 ~= 0 && parkingLot(currentPoint(1)-1, currentPoint(2))==0
        currentSpace=[currentPoint(1), currentPoint(2), currentPoint(1)-1, currentPoint(2)];
        altCurrentSpace=[currentPoint(1)-1, currentPoint(2), currentPoint(1), currentPoint(2)];
        if isempty(spaces) || (~any(ismember(spaces,currentSpace, 'rows')) && ~any(ismember(spaces,altCurrentSpace, 'rows')))
            count=count+1;
            spaces(count,:)=currentSpace;
            spaceCheck(parkingLot, [currentPoint(1)-1, currentPoint(2)])
        end
    end
    
    if currentPoint(1)+1 <= nRow && parkingLot(currentPoint(1)+1, currentPoint(2))==0
        currentSpace=[currentPoint(1), currentPoint(2), currentPoint(1)+1, currentPoint(2)];
        altCurrentSpace=[currentPoint(1)+1, currentPoint(2), currentPoint(1), currentPoint(2)];
        if isempty(spaces) || (~any(ismember(spaces,currentSpace, 'rows')) && ~any(ismember(spaces,altCurrentSpace, 'rows')))
            count=count+1;
            spaces(count,:)=currentSpace;
            spaceCheck(parkingLot, [currentPoint(1)+1, currentPoint(2)])
        end
    end
    
    if currentPoint(2)-1 ~= 0 && parkingLot(currentPoint(1), currentPoint(2)-1)==0
        currentSpace=[currentPoint(1), currentPoint(2), currentPoint(1), currentPoint(2)-1];
        altCurrentSpace=[currentPoint(1), currentPoint(2)-1, currentPoint(1), currentPoint(2)];
        if isempty(spaces) || (~any(ismember(spaces,currentSpace, 'rows')) && ~any(ismember(spaces,altCurrentSpace, 'rows')))
            count=count+1;
            spaces(count,:)=currentSpace;
            spaceCheck(parkingLot, [currentPoint(1), currentPoint(2)-1])
        end
    end
    
    if currentPoint(2)+1 <= nCol && parkingLot(currentPoint(1), currentPoint(2)+1)==0
        currentSpace=[currentPoint(1), currentPoint(2), currentPoint(1), currentPoint(2)+1];
        altCurrentSpace=[currentPoint(1), currentPoint(2)+1, currentPoint(1), currentPoint(2)];
        if isempty(spaces) || (~any(ismember(spaces,currentSpace, 'rows')) && ~any(ismember(spaces,altCurrentSpace, 'rows')))
            count=count+1;
            spaces(count,:)=currentSpace;
            spaceCheck(parkingLot, [currentPoint(1), currentPoint(2)+1])
        end
    end
end


